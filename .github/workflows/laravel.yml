name: Laravel

on: [push]

jobs:
  test_task:
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     operating-system: [ ubuntu-18.04, windows-2019 ]
    #     php: [ '7.3.2' ]
    # name: PHP ${{ matrix.php }} sample

    services:
      mysql:
        image: mysql:5.7
        ports:
          - 3306
        options: --health-cmd "mysqladmin ping -h localhost" --health-interval 20s --health-timeout 10s --health-retries 10
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: test-accounting-application-db

    steps:
    - uses: actions/checkout@v1
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.3.2'
    # - name: Setup PHP
    #   uses: nanasess/setup-php@master
    #   with:
    #     php-version: ${{ matrix.php }}
    - name: Copy .env
      run: php -r "file_exists('.env') || file_put_contents('.env', str_replace('DB_PORT=3306', 'DB_PORT=${{ job.services.mysql.ports['3306'] }}', file_get_contents('.env.githubActions')));"
    - name: Cache vendor
      id: cache-vendor
      uses: actions/cache@v1
      with:
        path: vendor
        key: ${{ runner.os }}-vendor-${{ hashFiles('**/composer.lock') }}
    - name: Install Dependencies
      if: steps.cache-vendor.outputs.cache-hit != 'true'
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
    - name: php -v
      run: php -v
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Execute Migration & Seed
      run: php artisan migrate:fresh --database=mysql_test
    - name: passport install
      run: php artisan passport:install
    - name: unit test
      run: composer test 

  master_task:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Login to Heroku Container registry
      env: 
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:login 
    - name: Build and push
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: git remote add heroku https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/${{ secrets.HEROKU_APP_NAME }}.git
    - name: Deploy to Heroku
      run: |
        git push heroku HEAD:master -f
    - name: Execute migration
      run: heroku run php artisan migrate -a ${{ secrets.HEROKU_APP_NAME }}